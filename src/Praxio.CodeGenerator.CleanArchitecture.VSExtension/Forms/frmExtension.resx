<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="folderBrowserDialog.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>